/*
 * This file is generated by jOOQ.
 */
package crawlmanager.models.tables;


import crawlmanager.models.CrawlJobs;
import crawlmanager.models.Indexes;
import crawlmanager.models.Keys;
import crawlmanager.models.tables.records.JobHistoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobHistory extends TableImpl<JobHistoryRecord> {

    private static final long serialVersionUID = 661260608;

    /**
     * The reference instance of <code>crawl_jobs.job_history</code>
     */
    public static final JobHistory JOB_HISTORY = new JobHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JobHistoryRecord> getRecordType() {
        return JobHistoryRecord.class;
    }

    /**
     * The column <code>crawl_jobs.job_history.id</code>.
     */
    public final TableField<JobHistoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>crawl_jobs.job_history.jobid</code>.
     */
    public final TableField<JobHistoryRecord, Integer> JOBID = createField("jobid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>crawl_jobs.job_history.crawl_state</code>.
     */
    public final TableField<JobHistoryRecord, Integer> CRAWL_STATE = createField("crawl_state", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>crawl_jobs.job_history.message</code>.
     */
    public final TableField<JobHistoryRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>crawl_jobs.job_history.update_on</code>.
     */
    public final TableField<JobHistoryRecord, Timestamp> UPDATE_ON = createField("update_on", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>crawl_jobs.job_history.start_time</code>.
     */
    public final TableField<JobHistoryRecord, Timestamp> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>crawl_jobs.job_history.end_time</code>.
     */
    public final TableField<JobHistoryRecord, Timestamp> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>crawl_jobs.job_history.created_on</code>.
     */
    public final TableField<JobHistoryRecord, Timestamp> CREATED_ON = createField("created_on", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>crawl_jobs.job_history</code> table reference
     */
    public JobHistory() {
        this(DSL.name("job_history"), null);
    }

    /**
     * Create an aliased <code>crawl_jobs.job_history</code> table reference
     */
    public JobHistory(String alias) {
        this(DSL.name(alias), JOB_HISTORY);
    }

    /**
     * Create an aliased <code>crawl_jobs.job_history</code> table reference
     */
    public JobHistory(Name alias) {
        this(alias, JOB_HISTORY);
    }

    private JobHistory(Name alias, Table<JobHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private JobHistory(Name alias, Table<JobHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JobHistory(Table<O> child, ForeignKey<O, JobHistoryRecord> key) {
        super(child, key, JOB_HISTORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return CrawlJobs.CRAWL_JOBS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.JOB_HISTORY_JOBID, Indexes.JOB_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JobHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_JOB_HISTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JobHistoryRecord> getPrimaryKey() {
        return Keys.KEY_JOB_HISTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JobHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<JobHistoryRecord>>asList(Keys.KEY_JOB_HISTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JobHistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JobHistoryRecord, ?>>asList(Keys.JOB_HISTORY_IBFK_1);
    }

    public Jobs jobs() {
        return new Jobs(this, Keys.JOB_HISTORY_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobHistory as(String alias) {
        return new JobHistory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobHistory as(Name alias) {
        return new JobHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JobHistory rename(String name) {
        return new JobHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JobHistory rename(Name name) {
        return new JobHistory(name, null);
    }
}
