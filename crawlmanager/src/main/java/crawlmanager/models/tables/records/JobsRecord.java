/*
 * This file is generated by jOOQ.
 */
package crawlmanager.models.tables.records;


import crawlmanager.models.tables.Jobs;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JobsRecord extends UpdatableRecordImpl<JobsRecord> implements Record9<Integer, String, String, String, Boolean, Integer, Integer, Timestamp, Timestamp> {

    private static final long serialVersionUID = -534232291;

    /**
     * Setter for <code>crawl_jobs.jobs.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>crawl_jobs.jobs.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>crawl_jobs.jobs.jobname</code>.
     */
    public void setJobname(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>crawl_jobs.jobs.jobname</code>.
     */
    public String getJobname() {
        return (String) get(1);
    }

    /**
     * Setter for <code>crawl_jobs.jobs.process</code>.
     */
    public void setProcess(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>crawl_jobs.jobs.process</code>.
     */
    public String getProcess() {
        return (String) get(2);
    }

    /**
     * Setter for <code>crawl_jobs.jobs.arguments</code>.
     */
    public void setArguments(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>crawl_jobs.jobs.arguments</code>.
     */
    public String getArguments() {
        return (String) get(3);
    }

    /**
     * Setter for <code>crawl_jobs.jobs.active</code>.
     */
    public void setActive(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>crawl_jobs.jobs.active</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>crawl_jobs.jobs.timeout_millis</code>.
     */
    public void setTimeoutMillis(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>crawl_jobs.jobs.timeout_millis</code>.
     */
    public Integer getTimeoutMillis() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>crawl_jobs.jobs.pause_millis</code>.
     */
    public void setPauseMillis(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>crawl_jobs.jobs.pause_millis</code>.
     */
    public Integer getPauseMillis() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>crawl_jobs.jobs.update_on</code>.
     */
    public void setUpdateOn(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>crawl_jobs.jobs.update_on</code>.
     */
    public Timestamp getUpdateOn() {
        return (Timestamp) get(7);
    }

    /**
     * Setter for <code>crawl_jobs.jobs.created_on</code>.
     */
    public void setCreatedOn(Timestamp value) {
        set(8, value);
    }

    /**
     * Getter for <code>crawl_jobs.jobs.created_on</code>.
     */
    public Timestamp getCreatedOn() {
        return (Timestamp) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, String, Boolean, Integer, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<Integer, String, String, String, Boolean, Integer, Integer, Timestamp, Timestamp> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Jobs.JOBS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Jobs.JOBS.JOBNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Jobs.JOBS.PROCESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Jobs.JOBS.ARGUMENTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field5() {
        return Jobs.JOBS.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Jobs.JOBS.TIMEOUT_MILLIS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Jobs.JOBS.PAUSE_MILLIS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return Jobs.JOBS.UPDATE_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field9() {
        return Jobs.JOBS.CREATED_ON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getJobname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getProcess();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getArguments();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component5() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getTimeoutMillis();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getPauseMillis();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getUpdateOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component9() {
        return getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getJobname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getProcess();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getArguments();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value5() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getTimeoutMillis();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getPauseMillis();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getUpdateOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value9() {
        return getCreatedOn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsRecord value2(String value) {
        setJobname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsRecord value3(String value) {
        setProcess(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsRecord value4(String value) {
        setArguments(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsRecord value5(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsRecord value6(Integer value) {
        setTimeoutMillis(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsRecord value7(Integer value) {
        setPauseMillis(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsRecord value8(Timestamp value) {
        setUpdateOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsRecord value9(Timestamp value) {
        setCreatedOn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JobsRecord values(Integer value1, String value2, String value3, String value4, Boolean value5, Integer value6, Integer value7, Timestamp value8, Timestamp value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JobsRecord
     */
    public JobsRecord() {
        super(Jobs.JOBS);
    }

    /**
     * Create a detached, initialised JobsRecord
     */
    public JobsRecord(Integer id, String jobname, String process, String arguments, Boolean active, Integer timeoutMillis, Integer pauseMillis, Timestamp updateOn, Timestamp createdOn) {
        super(Jobs.JOBS);

        set(0, id);
        set(1, jobname);
        set(2, process);
        set(3, arguments);
        set(4, active);
        set(5, timeoutMillis);
        set(6, pauseMillis);
        set(7, updateOn);
        set(8, createdOn);
    }
}
